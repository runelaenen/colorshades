 // source: https://ycdn.space/f/5x/mp1_5x5_1.png
 
 byte letters[][5] = {
  {0b00000000, 
   0b00000000, 
   0b00000000, 
   0b00000000, 
   0b00000000}, // space 32
  {0b00100000, 
   0b00100000, 
   0b00100000, 
   0b00000000, 
   0b00100000}, // ! 33
  {0b00101000, 
   0b00101000, 
   0b00000000, 
   0b00000000, 
   0b00000000}, // " 34
  {0b01010000, 
   0b11111000, 
   0b01010000, 
   0b11111000, 
   0b01010000}, // # 35
  {0b11111000, 
   0b001010000, 
   0b11111000, 
   0b10100000, 
   0b11111000}, // $ 36
  {0b11001000, 
   0b11010000, 
   0b00100000, 
   0b01011000, 
   0b10011000}, // % 37
  {0b01000000, 
   0b10100000, 
   0b01000000, 
   0b10101000, 
   0b01010000}, // & 38
  {0b00100000, 
   0b00100000, 
   0b00000000, 
   0b00000000, 
   0b00000000}, // ' 39
  {0b00010000, 
   0b00100000, 
   0b00100000, 
   0b00100000, 
   0b00010000}, // ( 40
  {0b00100000, 
   0b00010000, 
   0b00010000, 
   0b00010000, 
   0b00100000}, // ) 41
  {0b00010000, 
   0b00111000, 
   0b00010000, 
   0b00000000, 
   0b00000000}, // * 42
  {0b00100000, 
   0b00100000, 
   0b11111000, 
   0b00100000, 
   0b00100000}, // + 43
  {0b00000000, 
   0b00000000, 
   0b00000000, 
   0b00110000, 
   0b00100000}, // , 44
  {0b00000000, 
   0b00000000, 
   0b11111000, 
   0b00000000, 
   0b00000000}, // - 45
  {0b00000000, 
   0b00000000, 
   0b00000000, 
   0b01100000, 
   0b01100000}, // . 46
  {0b00001000, 
   0b00010000, 
   0b00100000, 
   0b01000000, 
   0b10000000}, // / 47
  {0b01110000, 
   0b10001000, 
   0b10001000, 
   0b10001000, 
   0b01110000}, // 0 48
  {0b01100000, 
   0b00100000, 
   0b00100000, 
   0b00100000, 
   0b00100000}, // 1 49
  {0b01110000, 
   0b10001000, 
   0b00110000, 
   0b01000000, 
   0b11111000}, // 2 50
  {0b11111000, 
   0b00001000, 
   0b11111000, 
   0b00001000, 
   0b11111000}, // 3 51
  {0b10001000, 
   0b10001000, 
   0b11111000, 
   0b00001000, 
   0b00001000}, // 4 52
  {0b11111000, 
   0b10000000, 
   0b11110000, 
   0b00001000, 
   0b11110000}, // 5 53
  {0b11111000, 
   0b10000000, 
   0b11111000, 
   0b10001000, 
   0b11111000}, // 6 54
  {0b11111000, 
   0b00001000, 
   0b00010000, 
   0b00100000, 
   0b01000000}, // 7 55
  {0b11111000, 
   0b10001000, 
   0b11111000, 
   0b10001000, 
   0b11111000}, // 8 56
  {0b11111000, 
   0b10001000, 
   0b11111000, 
   0b00001000, 
   0b00111000}, // 9 57
  {0b01100000, 
   0b01100000, 
   0b00000000, 
   0b01100000, 
   0b01100000}, // : 58
  {0b01100000, 
   0b01100000, 
   0b00000000, 
   0b01100000, 
   0b01000000}, // ; 59
  {0b00011000, 
   0b01100000, 
   0b10000000, 
   0b01100000, 
   0b00011000}, // < 60
  {0b00000000, 
   0b11111000, 
   0b00000000, 
   0b11111000, 
   0b00000000}, // = 61
  {0b11000000, 
   0b00110000, 
   0b00001000, 
   0b00110000, 
   0b11000000}, // > 62
  {0b11111000, 
   0b00001000, 
   0b00111000, 
   0b00000000, 
   0b00100000}, // ? 63
  {0b11111000, 
   0b10001000, 
   0b10011000, 
   0b10000000, 
   0b11111000}, // (at) 64
  {0b01110000, 
   0b10001000, 
   0b11111000, 
   0b10001000, 
   0b10001000}, // a 65
  {0b11110000, 
   0b10010000, 
   0b11111000, 
   0b10001000, 
   0b11111000}, // b 66
  {0b01111000, 
   0b10000000, 
   0b10000000, 
   0b10000000, 
   0b01111000}, // c 67
  {0b11110000, 
   0b10001000, 
   0b10001000, 
   0b10001000, 
   0b11110000}, // d 68
  {0b11111000, 
   0b10000000, 
   0b11100000, 
   0b10000000, 
   0b11111000}, // e 69
  {0b11111000, 
   0b10000000, 
   0b11100000, 
   0b10000000, 
   0b10000000}, // f 70
  {0b11111000, 
   0b10000000, 
   0b10111000, 
   0b10001000, 
   0b11111000}, // g 71
  {0b10001000, 
   0b10001000, 
   0b11111000, 
   0b10001000, 
   0b10001000}, // h 72
  {0b00100000, 
   0b00000000, 
   0b00100000, 
   0b00100000, 
   0b00100000}, // i 73
  {0b00010000, 
   0b00000000, 
   0b00010000, 
   0b00010000, 
   0b00110000}, // j 74
  {0b10011000, 
   0b10100000, 
   0b11000000, 
   0b10100000, 
   0b10011000}, // k 75
  {0b10000000, 
   0b10000000, 
   0b10000000, 
   0b10000000, 
   0b11110000}, // l 76
  {0b10001000, 
   0b11011000, 
   0b10101000, 
   0b10001000, 
   0b10001000}, // m 77
  {0b10001000, 
   0b11001000, 
   0b10101000, 
   0b10011000, 
   0b10001000}, // n 78
  {0b11111000, 
   0b10001000, 
   0b10001000, 
   0b10001000, 
   0b11111000}, // o 79
  {0b11111000, 
   0b10001000, 
   0b11111000, 
   0b10000000, 
   0b10000000}, // p 80
  {0b11111000, 
   0b10001000, 
   0b10101000, 
   0b10010000, 
   0b11101000}, // q 81
  {0b11100000, 
   0b10010000, 
   0b11100000, 
   0b10100000, 
   0b10010000}, // r 82
  {0b01111000, 
   0b10000000, 
   0b01110000, 
   0b00001000, 
   0b11110000}, // s 83
  {0b11111000, 
   0b00100000, 
   0b00100000, 
   0b00100000, 
   0b00100000}, // t 84
  {0b10001000, 
   0b10001000, 
   0b10001000, 
   0b10001000, 
   0b11111000}, // u 85
  {0b10001000, 
   0b10001000, 
   0b10001000, 
   0b01010000, 
   0b00100000}, // v 86
  {0b10001000, 
   0b10001000, 
   0b10001000, 
   0b10101000, 
   0b01010000}, // w 87
  {0b10001000, 
   0b01010000, 
   0b00100000, 
   0b01010000, 
   0b10001000}, // x 88
  {0b10001000, 
   0b01010000, 
   0b00100000, 
   0b00100000, 
   0b00100000}, // y 89
  {0b11111000, 
   0b00010000, 
   0b00100000, 
   0b01000000, 
   0b11111000}  // z 90
  };

byte* charToFont(char letter) {
  letter = toupper(letter);
  if(letter >= 32 && letter <= 90) {
    return letters[letter - 32];
  }
  return letters[0];
}

